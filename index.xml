<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rajath Ramakrishna</title>
    <link>/</link>
    <description>Recent content on Rajath Ramakrishna</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© Copyright notice</copyright>
    <lastBuildDate>Thu, 02 Feb 2023 23:17:00 -0800</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Raycast - My new favorite MacOS app</title>
      <link>/posts/raycast-my-new-favorite-macos-app/</link>
      <pubDate>Thu, 02 Feb 2023 23:17:00 -0800</pubDate>
      
      <guid>/posts/raycast-my-new-favorite-macos-app/</guid>
      <description>&lt;p&gt;I’ve been an &lt;a href=&#34;https://www.alfredapp.com/&#34;&gt;Alfred&lt;/a&gt; user for many many years and I’m also a Mega Supporter with a lifetime license. It provides so much value to me on a daily basis that it’s become one of the apps I install first when I set up a new laptop. I’ve used quite a few workflows an Alfred, I was using it as a clipboard manager, I had tons of dynamic snippets stored in them. I was doing everything with Alfred.&lt;/p&gt;
&lt;p&gt;This was the case until recently. I stumbled upon &lt;a href=&#34;https://www.raycast.com/&#34;&gt;Raycast&lt;/a&gt; about a month ago and I absolutely fell in love with it. The look and feel of it itself blew me away from the get-go. And once I checked out their store and the thousands of plugins they had, I was even more intrigued. I started looking at how I can replace my Alfred setup with Raycast and what I realized was, I was not only able to recreate my Alfred setup, but also do much more.&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;/images/RaycastScreenshot.png&#34;/&gt;
&lt;/figure&gt;

&lt;p&gt;Raycast not only replaced Alfred, but also a bunch of other apps I used to depend on to be productive.
Here’s that list of apps/websites that Raycast replaced:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;http://rectangleapp.com/&#34;&gt;Rectangle&lt;/a&gt;: I was using this for window management and moving things around. Raycast has several window configurtions available out of the box.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://apps.apple.com/us/app/amphetamine/id937984704?mt=12&#34;&gt;Amphetamine&lt;/a&gt;: I was using this to keep my mac awake. The &lt;a href=&#34;https://www.raycast.com/mooxl/coffee&#34;&gt;Coffee plugin&lt;/a&gt; on Raycast does this. No need for another app.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://apps.apple.com/us/app/horo-timer-for-menu-bar/id1437226581?mt=12&#34;&gt;Horo Timer&lt;/a&gt;: I was using this as a pomodoro timer. Raycast has the &lt;a href=&#34;https://www.raycast.com/asubbotin/pomodoro&#34;&gt;Pomodoro plugin&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://news.ycombinator.com/&#34;&gt;HackerNews&lt;/a&gt;: I was visiting hacker news a lot, but now thanks to Raycast’s &lt;a href=&#34;https://www.raycast.com/thomas/hacker-news&#34;&gt;HackerNews plugin&lt;/a&gt;, I can see the post right inside Raycast.&lt;/li&gt;
&lt;li&gt;Searching Jira boards/projects/issues: Can be done directly from Raycast with the &lt;a href=&#34;https://www.raycast.com/emanguy/jira-search-self-hosted&#34;&gt;Jira Self-Hosted plugin&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Calculator, unit conversion, currency conversion, dictionary lookup, file search, and all the utilities are handled really well by Raycast.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;One of the nice things about Raycast is the way it holds the context. For example, if you invoke Raycast and perform an operation after which you close Raycast and proceed with your life, if you open Raycast again in the next few minutes (configurable), you can pick up where you left off instead of starting over. This is so intuitive and makes me feel great to use it.&lt;/p&gt;
&lt;p&gt;The other cool thing I really dig is the agenda feature in Raycast. I’ve pinned Agenda to the top of my Raycast results so that when I hit &lt;code&gt;Cmd+Space&lt;/code&gt; to invoke Raycast, I just have to hit &lt;code&gt;Enter&lt;/code&gt; and it’ll take me to the agenda. And since I have Google Meet integration, I can just hit Enter again which will directly take me to the current meeting. This has been a life-saver. Just a couple of keystrokes and I’m in the meeting. You can also configure it to show the title of the meeting in the menu bar just a few minutes before the meeting starts and it sticks around until the meeting ends. This gives a nice indicator/reminder about the upcoming/ongoing meeting.&lt;/p&gt;
&lt;p&gt;Not just this, Raycast’s developer documentation is really good. If there isn’t an extension for a use case you’re looking for, you can easily create one by referring to the documentation. Everything is very straight-forward and the devs are friendly and super helpful.&lt;/p&gt;
&lt;p&gt;This is just scratching the surface. The full set of features that Raycast offers is immense and takes way more than a blog post to explain. I recommend checking it out first hand.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The pointlessness of the Mac Dockbar</title>
      <link>/posts/the-pointlessness-of-the-mac-dockbar/</link>
      <pubDate>Sat, 28 Jan 2023 20:59:00 -0800</pubDate>
      
      <guid>/posts/the-pointlessness-of-the-mac-dockbar/</guid>
      <description>&lt;p&gt;One of the things that was initially unique to Mac was the dockbar. I remember the first time I used a Mac, I was quite fascinated by it. I liked the zoom-in effect as I hovered my mouse over each item on it.&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;/images/MacDockbar.png&#34;/&gt;
&lt;/figure&gt;

&lt;p&gt;A fresh install of MacOS (or OSX back in the day) comes with a persistent dockbar at the bottom taking up a good chunk of the screen real estate. So, even when you maximize any app, it won’t take up the full screen because of the dockbar sitting at the bottom..&lt;/p&gt;
&lt;p&gt;After a few days of using it, I started getting pretty annoyed with it and I turned on auto-hide. That only solved the problem partially. Every time I moved my mouse to the bottom of the screen, even for a moment, it popped up, disrupting my flow. More than 90-95% of the time, they were all misfires.&lt;/p&gt;
&lt;p&gt;So, I ended up setting a delay on the dockbar to 3 seconds so that it doesn’t keep popping up when my mouse accidentally moves to the bottom edge of the screen. Instead, if the mouse stayed at the bottom for 3 seconds, only then it would popup. This made things better, but not great.&lt;/p&gt;
&lt;p&gt;The whole time, I questioned, what was the point of a dockbar anyway? I feel like it’s more eye candy and gimmicky than useful. If anything, it gets in the way more than it helps. I never understand why some people depend on it and actually use it. It’s so much slower to use the dockbar. Here’s why: You already know which app you want to open. If it’s already open, you hit &lt;code&gt;Cmd+Tab&lt;/code&gt; and just switch to it. If it’s not open, you hit &lt;code&gt;Cmd+Space&lt;/code&gt; to invoke Spotlight and type a few characters of the app you want to open and you just switch to it.&lt;/p&gt;
&lt;p&gt;Let’s say you’re using just your trackpad and your hand is not close to the keyboard. If you want to switch to another app with just your trackpad, doing an Exposé gesture is much better and easier than scanning the Dockbar for it. With Exposé, you get window previews which make it a lot easier to select from. Dockbar has so much fluff in it with all the apps that are statically present in it that it takes longer to sift through them and find the app you’re looking for.&lt;/p&gt;
&lt;p&gt;I guess the only use of a Dockbar is when one is looking for an app but they don’t know its name, they only know what it looks like. Other than that, I don’t see a reason to use Dockbar. I would definitely recommend getting rid of it or at least setting an autohide delay of a few seconds. To do that, run this command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#93a1a1;background-color:#002b36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;defaults write com.apple.Dock autohide-delay -float &lt;span style=&#34;color:#2aa198&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#719e07&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; killall Dock
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Switching between qwerty and colemak</title>
      <link>/posts/switching-between-qwerty-and-colemak/</link>
      <pubDate>Wed, 25 Jan 2023 22:56:00 -0800</pubDate>
      
      <guid>/posts/switching-between-qwerty-and-colemak/</guid>
      <description>&lt;p&gt;Early last year, I had some pain and discomfort in my wrists, so I decided to switch to a split keyboard. I went down an &lt;a href=&#34;https://reddit.com/r/ErgoMechKeyboards&#34;&gt;/r/ErgoMechKeyboards&lt;/a&gt; rabbit hole and ended up getting a &lt;a href=&#34;https://www.zsa.io/moonlander&#34;&gt;Moonlander Mark I&lt;/a&gt;. Around the same time, I also found that a lot of people use Colemak as the keyboard layout and that QWERTY is actually very inefficient. And down another rabbit hole I went.&lt;/p&gt;
&lt;p&gt;After doing a lot more research, I decided to go all in with both split keyboard &lt;em&gt;and&lt;/em&gt; new layout at the same time. From what I read, it apparently helps with muscle memory when transition to split keyboard + the new layout is done at the same time. Also, I picked Colemak because, it was one of the most popular for all-round typing - both coding and general typing (in English). I didn’t want to try out a bunch of layouts before deciding on one since doing so was going impact my productivity at work.&lt;/p&gt;
&lt;p&gt;Since I quickly wanted to ramp up and get better speeds with Colemak, I stopped using QWERTY completely. As my speeds improved, I was no longer able to type in QWERTY on my laptop keyboard. As I typed, I was hitting wrong keys all the time and I would immediately stop and get my split keyboard that was configured for Colemak. Now this became a little cumbersome since everywhere I went I had to take my keyboard with me.&lt;/p&gt;
&lt;p&gt;One day, I pushed through the wrong key presses and forced myself to type in QWERTY for some 10-15 minutes and I got much better at it. Turns out, the human brain is quite capable ot handling this kind of drastic change. Once I got some confidence in this switch, I now regularly switch between QWERTY and Colemak and I type fast in both. My Colemak speeds are still not great, but it’s getter better.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Make Helix use your workspace prettier config</title>
      <link>/posts/make-helix-use-your-workspace-prettier-config/</link>
      <pubDate>Mon, 09 Jan 2023 13:25:00 -0800</pubDate>
      
      <guid>/posts/make-helix-use-your-workspace-prettier-config/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve been &lt;a href=&#34;https://rrajath.com/posts/exploring-helix-editor/&#34;&gt;trying out Helix Editor&lt;/a&gt; recently and loving it. I wanted to see if it could be my primary IDE and one thing I wish it did was format the file on save. By this, I don’t just mean fixing indentation, but also applying eslint fixes and running prettier. And I wanted this formatting to be applied based on the rules defined for that package. For example, I was in a nodejs workspace with typescript files and a prettier config that had rules like &lt;code&gt;singleQuote&lt;/code&gt;, &lt;code&gt;trailingComma&lt;/code&gt;, etc.&lt;/p&gt;
&lt;p&gt;I tried a few prettier configs on the web for Helix and &lt;a href=&#34;https://github.com/helix-editor/helix/wiki/External-binary-formatter-configuration#prettier&#34;&gt;none of them worked&lt;/a&gt;. This post is to document what &lt;em&gt;did&lt;/em&gt; work so that the next time I run into the same situation I don&amp;rsquo;t start from scratch and end up trying a bunch of things to no avail.&lt;/p&gt;
&lt;p&gt;So, here&amp;rsquo;s what worked. I found this &lt;a href=&#34;https://github.com/helix-editor/helix/discussions/3198#discussioncomment-3324876&#34;&gt;line of code as a comment on one of the GitHub issues&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#93a1a1;background-color:#002b36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;formatter &lt;span style=&#34;color:#719e07&#34;&gt;=&lt;/span&gt; { command &lt;span style=&#34;color:#719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;npx&amp;#34;&lt;/span&gt;, args &lt;span style=&#34;color:#719e07&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;prettier&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;--parser&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;typescript&amp;#34;&lt;/span&gt;] }
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This fixed the prettier issue for me and now any double quotes in the file are converted to single quotes. Any semi-colons that were missed at the end of statements get automatically added, just like how it’s configured in the prettier config for the project.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>2022 - Year in Review</title>
      <link>/posts/2022-year-in-review/</link>
      <pubDate>Sun, 08 Jan 2023 18:23:00 -0800</pubDate>
      
      <guid>/posts/2022-year-in-review/</guid>
      <description>&lt;p&gt;I’ve been doing the &amp;ldquo;Year in Review&amp;rdquo; series for a few years now. At the end of every year, I take some time to think about what went well, what didn’t go well, any side quests I ventured into to get a perspective on how my life is going and what kind of changes it needs.&lt;/p&gt;
&lt;h2 id=&#34;what-went-well&#34;&gt;What went well&lt;/h2&gt;
&lt;h3 id=&#34;reading&#34;&gt;Reading&lt;/h3&gt;
&lt;p&gt;I read quite a few books in 2022. Some of the notable ones are &lt;a href=&#34;https://www.goodreads.com/book/show/34376766-blood-sweat-and-pixels&#34;&gt;Blood, Sweat and Pixels&lt;/a&gt;, &lt;a href=&#34;https://www.goodreads.com/book/show/59616977-building-a-second-brain&#34;&gt;Building a Second Brain&lt;/a&gt;, &lt;a href=&#34;https://www.goodreads.com/book/show/57423646-immune&#34;&gt;Immune&lt;/a&gt;, &lt;a href=&#34;https://www.goodreads.com/book/show/66354.Flow&#34;&gt;Flow&lt;/a&gt; and &lt;a href=&#34;https://www.goodreads.com/book/show/35957157-thinking-in-bets&#34;&gt;Thinking in Bets&lt;/a&gt;. I read few more books that I didn’t end up finising. However, I did make it a habit to read every single day and right now I’m on a reading streak (30 weeks / 142 days in a row). Kindle’s gamification has certainly helped me read more. I don’t like the idea of setting a reading goal in terms of number of books. I’ve been a victim of trying to finish a dense and dry book and then having the dissatisfaction of not finishing it nag me for weeks. That’s one thing I really want to overcome.&lt;/p&gt;
&lt;h3 id=&#34;working-out&#34;&gt;Working out&lt;/h3&gt;
&lt;p&gt;After having couple of incidents of lower back issues and a bunch of physical therapy sessions, I finally decided to join a gym, get personal training and be regular. That’s what happened in Q4 2022 where I started working out regularly and also eating healthier. I see a huge difference health wise and I only wish I started sooner. Nevertheless, this is something I want to keep doing my whole life. Cardiovascular fitness only gets more and more important as we get older.&lt;/p&gt;
&lt;h3 id=&#34;journaling&#34;&gt;Journaling&lt;/h3&gt;
&lt;p&gt;I have been very regular with journaling and it’s one of the things that’s very underrated, but adds a lot of value. Whenever I’m stressed/overwhelmed, journaling has always been my goto. Doing a weekly, monthly and quarterly review really helped me identify areas for improvement that I would have otherwise missed.&lt;/p&gt;
&lt;h3 id=&#34;12-week-year&#34;&gt;12-week year&lt;/h3&gt;
&lt;p&gt;I read a book in Jan 2022 called &lt;a href=&#34;https://www.goodreads.com/book/show/10009377-the-12-week-year&#34;&gt;The 12 Week Year&lt;/a&gt; and I really liked the idea behind it. It’s basically what the title says. Instead of planning for an entire year, you plan for 12 weeks at a time (plus one week buffer) and then do a review at the end of 12 weeks. The main reason for this is that humans are not great at projecting far into the future. Long term goals get more and more unlikely to get done and it’s easier to project what you can do in the next 12 weeks. This has been a game changer for me and I’m still doing it.&lt;/p&gt;
&lt;h3 id=&#34;awakening-from-the-meaning-crisis&#34;&gt;Awakening from the Meaning Crisis&lt;/h3&gt;
&lt;p&gt;This is a &lt;a href=&#34;https://www.youtube.com/watch?v=iu9fa4TkWE0&amp;amp;list=PLND1JCRq8Vuh3f0P5qjrSdb5eC1ZfZwWJ&#34;&gt;lecture series on YouTube&lt;/a&gt; and it’s absolute gold. Somebody on &lt;a href=&#34;https://www.reddit.com/r/InsightfulQuestions/&#34;&gt;/r/InsightfulQuestions&lt;/a&gt; subreddit mentioned this in one of the comments for a question I don’t even remember and I’m in love with this series. John Vervaeke is so passionate about the topic and is so great at explaining things. There are 50 episodes of about 1 hour each and every single episode is packed with so much information. I couldn’t binge on it because after each episode, I had to take some time to think about what was explained. I really like thinking about philosophical topics and I’m very curious to learn and understand how people in the ancient times thought about things. I highly recommend this series. I’m only on episode 18. I’m planning to complete the series this year. I also take lot of notes for each episode I watch and I publish them online.&lt;/p&gt;
&lt;h3 id=&#34;started-2-other-blogs&#34;&gt;Started 2 other blogs&lt;/h3&gt;
&lt;p&gt;I started 2 blogs. One is called &lt;a href=&#34;https://github.com/rrajath/knowledge&#34;&gt;Knowledge&lt;/a&gt; which contains book notes or lecture notes (as mentioned above) which is published in a documentation format. The other is called &lt;a href=&#34;https://github.com/rrajath/CodexVitae&#34;&gt;Codex Vitae&lt;/a&gt; which means Book of Life. I &lt;a href=&#34;https://github.com/busterbenson/public/blob/master/ideas.md#codex-vitae-aka-book-of-life-or-book-of-beliefs&#34;&gt;got this idea from Buster Benson&lt;/a&gt; and I really liked it. They’re both very rudimentary at the moment. I haven’t thought much about hosting and theming. But I’ll make some improvements and contributions to them. With Codex Vitae, it’s probably going to stay as a GitHub repository since there’s lot of value in tracking version history. Because, especially in this context it shows how my thinking has changed over the course of time.&lt;/p&gt;
&lt;h2 id=&#34;what-didn-t-go-well&#34;&gt;What didn’t go well&lt;/h2&gt;
&lt;h3 id=&#34;guitar-practice&#34;&gt;Guitar Practice&lt;/h3&gt;
&lt;p&gt;This is a weird one. I practiced guitar in the beginning of the year and didn’t touch it for months. Then picked it back up at the end of the year. While I’m not happy about the lack of practice for the most part, I’m glad I picked it back up and now I’m seriously trying to practice at least thrice a week.&lt;/p&gt;
&lt;h3 id=&#34;reading&#34;&gt;Reading&lt;/h3&gt;
&lt;p&gt;As mentioned in the above section, I’ve been on a reading streak for more than half a year and most of that is quite effective. However, I’ve never been super happy with the way I read. I’m the happiest when I read without any distraction for a good chunk of time (at least an hour), make notes, make connections with older notes and form ideas. With a busy lifestyle, I never really got a chance to do all of that. While my reading has been consistent, I do want to take it to the next level and improve it.&lt;/p&gt;
&lt;h3 id=&#34;respecting-the-plan&#34;&gt;Respecting the Plan&lt;/h3&gt;
&lt;p&gt;I’m not very strict with myself about sticking to the plan I make at the beginning of every week. Lot of times, I won’t be able to do things that I planned. Some of them are due to other priorities creeping up and some due to my own laziness. What I didn’t do a good job of was being aggressive about it - by both reflecting on what I didn’t do and could have done, and also tweak the plans as soon as I notice that I won’t be able to achieve them. I basically gotta be more mindful about it.&lt;/p&gt;
&lt;h3 id=&#34;laziness&#34;&gt;Laziness&lt;/h3&gt;
&lt;p&gt;This is more of a root cause than a specific thing that didn’t go well. It was due to laziness that I didn’t practice guitar much, didn’t workout much (initially), didn’t meditate enough and didn’t do 100 other things. Again, being mindful of the failures and really digging deep to figure out why it happened would definitely help.&lt;/p&gt;
&lt;h3 id=&#34;phone-usage&#34;&gt;Phone Usage&lt;/h3&gt;
&lt;p&gt;This year, my phone usage was quite high. I was averaging at almost 5 hours per day. That’s a lot! Most of this was reading newsletters, blogposts. certain subreddits and also watching TV shows sometimes. I still want to reduce it and keep it under 3 hours.&lt;/p&gt;
&lt;h3 id=&#34;meditation&#34;&gt;Meditation&lt;/h3&gt;
&lt;p&gt;Very irregular at it. I know the value it provides and I really like meditating, since it gives me immense clarity and helps me calm down. But never made time for it.&lt;/p&gt;
&lt;h2 id=&#34;side-quests&#34;&gt;Side Quests&lt;/h2&gt;
&lt;h3 id=&#34;ergo-mech-keyboards&#34;&gt;Ergo Mech Keyboards&lt;/h3&gt;
&lt;p&gt;I fell down the &lt;a href=&#34;https://www.reddit.com/r/ErgoMechKeyboards/&#34;&gt;ergo mech keyboards rabbithole&lt;/a&gt; and quite the rabbithole that was. I was obsessed wih everything about it and ordered a &lt;a href=&#34;https://www.zsa.io/moonlander&#34;&gt;Moonlander&lt;/a&gt;. I also ordered a bunch of tools to build one myself and ended up building 3 split keyboards. I love using them and each keyboard I built was progressively better than the previous one. I also learned a ton along the way. Not only this, I evangelized it at work so much that I made 4 of my teammates get into building keyboards as well. I consider that more than a win.&lt;/p&gt;
&lt;h3 id=&#34;colemak-dh&#34;&gt;Colemak-DH&lt;/h3&gt;
&lt;p&gt;While I was going down the split keyboard rabbithole, I also saw many posts about how QWERTY is the least efficient keyboard layout, and lot of people suggesting &lt;a href=&#34;https://colemakmods.github.io/mod-dh/&#34;&gt;Colemak-DH&lt;/a&gt; to be a better one. I obviously wanted to make that improvement in my life since I use keyboard every single day for several hours and investing some time in learning a new and more efficient layout would pay off in the long run, even though it would slow me down drastically while learning it. I’m glad I made the switch to Colemak. It’s very ergonomic and efficient. This switch happenend sometime in mid-2022. My speed in QWERTY was ~100 wpm and when I switched to Colemak it dropped to 8 wpm. Now I’m getting closer and closer to my QWERTY speeds. Highly recommend Colemak. Also recommend &lt;a href=&#34;https://www.keybr.com/&#34;&gt;keybr&lt;/a&gt; and &lt;a href=&#34;https://monkeytype.com/&#34;&gt;MonkeyType&lt;/a&gt; for typing practice. And Tarmak if you want to progressively move away from QWERTY instead of going all in.&lt;/p&gt;
&lt;h3 id=&#34;more-emacs&#34;&gt;More Emacs&lt;/h3&gt;
&lt;p&gt;As with keyboards, I was also evangelizing about Emacs and got couple of people at work obsessed with it as well. I also kept tinkering the Emacs config and a notable package to callout is &lt;a href=&#34;https://github.com/meow-edit/meow&#34;&gt;Meow&lt;/a&gt;. This made me move away from &lt;a href=&#34;https://github.com/emacs-evil/evil&#34;&gt;evil&lt;/a&gt; and made everything more ergonomic.&lt;/p&gt;
&lt;h3 id=&#34;learning-stuff&#34;&gt;Learning stuff&lt;/h3&gt;
&lt;p&gt;Learned quite a few things this year. I dove into &lt;a href=&#34;https://www.gatsbyjs.com/&#34;&gt;Gatsby&lt;/a&gt;, then &lt;a href=&#34;https://nextjs.org/&#34;&gt;NextJs&lt;/a&gt; and finally CSS. I’ve always been bad at CSS and never had the inclination towards learning it. This time I decided to learn it and it’s still ongoing. The &lt;a href=&#34;https://www.internetingishard.com/&#34;&gt;Interneting Is Hard&lt;/a&gt; tutorial has been really good and I’ve been learning a lot. Besides that, I also discovered Helix Editor which is blazing fast with a different modal approach compared to vim and I really like it. That’s what prompted me to move away from evil mode in Emacs and switch to Meow.&lt;/p&gt;
&lt;h2 id=&#34;lessons-learned&#34;&gt;Lessons Learned&lt;/h2&gt;
&lt;h3 id=&#34;taking-weekly-plan-very-seriously&#34;&gt;Taking weekly plan very seriously&lt;/h3&gt;
&lt;p&gt;Like I mentioned in a previous section, I make plans every week but don’t analyze the failures at all. I just push them to next week. Digging deeper will help with many things - getting clarity on why I don’t feel like doing something I had planned, maybe my estimations weren’t right and I took on much more that I could handle, maybe some of the tasks weren’t needed to be done in the first place. Being more mindful while planning, doing the tasks and doing the weekly review will help with both better planning and better execution.&lt;/p&gt;
&lt;h3 id=&#34;doing-tasks-mindlessly-is-just-time-wasted&#34;&gt;Doing tasks mindlessly is just time wasted&lt;/h3&gt;
&lt;p&gt;There’s difference between &amp;ldquo;meditating&amp;rdquo; (read sitting quietly with eyes closed) for 5 minutes just for the heck of it to check that task off the list and really being fully present. There’s difference between reading things just to keep the streak going vs really diving deep into the subject and understanding the core idea. The former results in a waste of time; time that we’d never get back and time that didn’t yield us anything useful. Even if it’s just doing 2 things in a day, if it’s done mindfully it’ll make the experience so much better.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Futurepedia</title>
      <link>/micro/futurepedia/</link>
      <pubDate>Tue, 27 Dec 2022 22:48:00 -0800</pubDate>
      
      <guid>/micro/futurepedia/</guid>
      <description>&lt;p&gt;Directory of AI tools containing free/freemium/paid services&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.futurepedia.io&#34;&gt;https://www.futurepedia.io&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Clickbaits are here to stay</title>
      <link>/posts/clickbaits-are-here-to-stay/</link>
      <pubDate>Tue, 27 Dec 2022 22:43:00 -0800</pubDate>
      
      <guid>/posts/clickbaits-are-here-to-stay/</guid>
      <description>&lt;p&gt;More than a decade ago I came across BuzzFeed articles like &amp;ldquo;10 things you didn&amp;rsquo;t know about the Illuminati, number 7 will surprise you&amp;rdquo; for the first time. At the time, I didn&amp;rsquo;t even know they were called clickbait. This reminded me of the tabloids I saw near checkout lines in grocery stores. Every time I&amp;rsquo;d see one of those magazines, I used to think, &amp;ldquo;This is beyond ridiculous. Who reads this stuff?&amp;rdquo;. In my mind, I used to categorize tabloids as the lowest form of &amp;ldquo;news&amp;rdquo; and just a desperate attempt to get peoples&amp;rsquo; attention to buy those magazines, and in my opinion that&amp;rsquo;s still the case.&lt;/p&gt;
&lt;p&gt;But when I started seeing more and more clickbaits online, I started becoming infuriated because now they were everywhere. I was seeing the equivalent of tabloid headlines in most of the websites I used to visit and it felt like there was no escaping them. I initially thought only sites like BuzzFeed and similar ones would be so desperate for attention and clicks, and real news sites wouldn&amp;rsquo;t need clickbaits.&lt;/p&gt;
&lt;p&gt;I was wrong. I started seeing them even on websites like HackerNews or AndroidPolice. It was annoying me so much that I didn&amp;rsquo;t click those links on purpose, even though I knew it had information that I was looking for. It was my way of &amp;ldquo;vote with your clicks&amp;rdquo;. And then, it was all over YouTube too. The channels I subscribe to - Red Delta Project, Veritasium, etc. that have nothing to do with gossip or sensational news, but instead make educational content were also filled with titles that were very clickbait-y.&lt;/p&gt;
&lt;p&gt;I didn&amp;rsquo;t like it, and I was hoping this was just a fad that would pass. I thought it would be one of those things where companies would jump on just to be part of whatever trend was going on and then drop it when it&amp;rsquo;s no longer &amp;ldquo;cool&amp;rdquo;. But at the back of my mind, I was thinking that clickbaits are only growing because they work. People click such links and clicks is what a service primarily measures (among other things) the popularity of its article.&lt;/p&gt;
&lt;p&gt;I recently saw a video on Veritasium titled &lt;a href=&#34;https://www.youtube.com/watch?v=S2xHZPH5Sng&#34;&gt;Clickbait Is Unreasonably Effective&lt;/a&gt;. This hit home with me. If people tend to click on clickbait articles, then there &lt;em&gt;will&lt;/em&gt; be more clickbait articles. This is one thing if a blog contains a bunch of such articles. But if a serivce like YouTube takes uploaded videos and ranks them, and happens to find clickbait-y videos perform better, it&amp;rsquo;ll just rank those videos higher. And if I&amp;rsquo;m a YouTube content creator, and I want to stay in the game, I&amp;rsquo;d have to play the same game. As much as I hate clickbait, I&amp;rsquo;d still have to add a clickbait title, a clickbait thumbnail and a clickbait caption in the thumbnail. And not to forget a corny facial expression on the thumbnail.&lt;/p&gt;
&lt;p&gt;What I saw in the above video did put things into perspective as to why clickbait even exists and why everybody seems to be using it more and more. I still cringe when I see such titles. What scares me even more is, a lot of times any title I try to come up with for a blog post that I write, I start feeling like it&amp;rsquo;s clickbait-y. I spend more time thinking about how to not make the title sound very clickbait-y. Or how to make the title sound as least clickbait-y as possible. Sometimes I fail. But I still try.&lt;/p&gt;
&lt;p&gt;I guess what I&amp;rsquo;m trying to say are two things:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Whether anybody likes it or not, I think clickbaits will continue ot exist and thrive as long as clicks (or click-through rate) is used as one of the dominant metrics. That&amp;rsquo;s just the world we live in now.&lt;/li&gt;
&lt;li&gt;I try my best to come up with titles that are not clickbait-sounding. I&amp;rsquo;d rather want the reader to not be interested to read my blogpost after looking at the headline than cringe hard at the headline.&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Exploring Helix Editor</title>
      <link>/posts/exploring-helix-editor/</link>
      <pubDate>Sun, 25 Dec 2022 23:10:00 -0800</pubDate>
      
      <guid>/posts/exploring-helix-editor/</guid>
      <description>&lt;p&gt;A few weeks ago, my coworker was talking about &lt;a href=&#34;https://helix-editor.com&#34;&gt;Helix Editor&lt;/a&gt;. I&amp;rsquo;m generally fascinated by CLI tools, so I decided to check it out.&lt;/p&gt;
&lt;p&gt;As soon as I tried it I was super impressed with how many features were packed in it. Tree-Sitter, Language Servers, multiple selections and many more. I have been struggling the past few months to get a good IDE experience set up on Emacs and every time I try, it falls short by just a little bit and I end up switching back to VS Code. I remember doing tons of different customizations, trying out several packages and their individual settings just so that all those packages play along together very well. But it only got me to about 90% of what I like. I&amp;rsquo;d run into all kinds of weird issues every now and then and it would take my focus away from the task at hand.&lt;/p&gt;
&lt;p&gt;Helix on the other hand required almost zero config. Pretty much every single default it came with was intuitive. It supports so many languages, and with tree-sitter integration things are a lot smoother and faster while editing code. But the thing I was most impressed with was the speed. I&amp;rsquo;ve never seen that level of speed and responsiveness from any editor. Not Emacs, not VSCode, definitely not IntelliJ. I tried opening a few random projects and tried editing the code a little bit and the experience was awesome. Everything, from auto-complete to opening overlay menus, filtering files from a list of hundreds, even narrowing down commands from the command palette was very smooth.&lt;/p&gt;
&lt;p&gt;Helix also deviates from vim and has its own keybindings (inspired by Kakoune). Being a long time vim user, I hated them at first, but then I really understood why things are done differently and I totally agree with it. Vim has a &amp;ldquo;do first, select later&amp;rdquo; kind of navigation which is not super efficient. With vim you first specify that you want to change or delete something and then you specify what you want to do the operation on. For example, &lt;code&gt;c2w&lt;/code&gt; will delete the next two words from the cursor&amp;rsquo;s position and change the cursor to insert mode. If you go wrong in specifying how many words (in this instance), you&amp;rsquo;ll have to undo and start over. Helix follows a &amp;ldquo;select first, do later&amp;rdquo; approach which is great. Once you&amp;rsquo;re happy with the selection, you can do whatever you want with it. To do the above operation in Helix, I&amp;rsquo;d have to do &lt;code&gt;v2wc&lt;/code&gt;. There&amp;rsquo;s one more keystroke here, but it&amp;rsquo;s a lot more intuitive and I make fewer mistakes.&lt;/p&gt;
&lt;p&gt;There were a couple of things I really wanted in Helix - a tab bar so that I can see the open files (this was recently added and is now available), a tree explorer as a sidebar or an overlay (this was recently merged and should be available soon), and a way to automatically reload a file if that file was changed outside of Helix.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve really been enjoying Helix. I love the thriving community and the effort that goes into fixing bugs and adding features. I&amp;rsquo;m still learning the keybindings and how to efficiently navigate in the file. I&amp;rsquo;d recommend it to everyone to at least give it a try.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Colored Kindle Highlights</title>
      <link>/posts/colored-kindle-highlights/</link>
      <pubDate>Sat, 17 Dec 2022 18:29:00 -0800</pubDate>
      
      <guid>/posts/colored-kindle-highlights/</guid>
      <description>&lt;p&gt;A coworker of mine runs a bi-weekly tech book club where a bunch of people get together, read a couple of chapters of the ongoing tech book (like Clean Code) beforehand and discuss in the meeting how that can be applied in our existing codebase.&lt;/p&gt;
&lt;p&gt;Since he runs the meeting while sharing his screen, as he goes through the pages of the chapter, he shows his highlights that he thinks are good talking points for the meeting.&lt;/p&gt;
&lt;p&gt;I noticed that there were different colored highlights: blue, red and yellow. When asked about it, he mentioned that each color represents something:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Blue&lt;/strong&gt;: when he agrees with the author&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Red&lt;/strong&gt;: when he disagrees with the author&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Yellow&lt;/strong&gt;: when he thinks he needs to do more research on that topic&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I think this convention is really good. This not only works for tech books, but also non-fiction. I&amp;rsquo;m certainly going to apply them going forward to all the tech and non-fiction books I read.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>I enjoy doing boring, repetitive, mundane tasks</title>
      <link>/posts/i-enjoy-doing-boring-repetitive-mundane-tasks/</link>
      <pubDate>Fri, 11 Nov 2022 23:29:00 -0800</pubDate>
      
      <guid>/posts/i-enjoy-doing-boring-repetitive-mundane-tasks/</guid>
      <description>&lt;p&gt;The title of this post seems kinda oxymoronic. Enjoyment and boredom seem to be opposites, so to speak. If we&amp;rsquo;re bored, that means we&amp;rsquo;re not stimulated and that means we&amp;rsquo;re not enjoying whatever it is we&amp;rsquo;re doing (or not doing).&lt;/p&gt;
&lt;p&gt;Most people I know hate doing mundane repetitive tasks or chores like cleaning, folding clothes, etc. I particularly like them. Not because I enjoy doing them. But because that&amp;rsquo;s where a lot of my thoughts and ideas form connections. I&amp;rsquo;ve had a lot of epiphanies and aha moments during these times.&lt;/p&gt;
&lt;p&gt;For the longest time, I didn&amp;rsquo;t connect the dots of what motivated me to actually &lt;em&gt;do&lt;/em&gt; &amp;ldquo;boring and repetitive&amp;rdquo; chores. I just did them. And when there was a choice between who in the household wanted to do the boring repetitive task, I always stepped up. After a while, I started viewing that as a negative since I thought seeking to do such boring chores meant I rather prefer doing those tasks than doing something more creative and stimulating. And that somehow by doing so, I was underachieving.&lt;/p&gt;
&lt;p&gt;However, I later realized that my mind starts wandering and inevitably starts thinking about things I read recently, a situation that happened to me recently or a recent conversation I had. A lot of times, my mind wanders into a problem at work I&amp;rsquo;d be struggling to solve. And amidst the cleaning or doing the dishes, or folding clothes, I&amp;rsquo;d suddenly find answers. This has happened so many times that I started enjoying such tasks. The main reason being, it gives my mind a break from the distraction in front of me.&lt;/p&gt;
&lt;p&gt;I constantly jump from one task to the next. Sometimes I try to multi-task, and fail miserably. I&amp;rsquo;d be working on some piece of code at the end of my workday and as soon as I&amp;rsquo;m done, I&amp;rsquo;d go to the living room to watch some TV, or play a game, or read a book, or check Reddit. Once I&amp;rsquo;m done with that task, I&amp;rsquo;d switch to another one immediately. I don&amp;rsquo;t take breaks in between. I just keep hopping. This keeps my mind occupied and it&amp;rsquo;s always in consumption mode. My mind never gets a break, it never gets some rest to process what it consumed. It continuously consumes.&lt;/p&gt;
&lt;p&gt;Doing chores forces our mind to disconnect from distractions and just do something &amp;ldquo;mindlessly&amp;rdquo;. Those tasks are so &amp;ldquo;boring&amp;rdquo; that the brain is not required to apply logic, creativity, critical thinking or any of that. It is now free and this is when it starts to process what it consumed earlier. Connections are made, epiphanies are had, magic happens. These are the kind of feelings I long for. That moment when you figure something out. When you spend a lot of time and struggle to understand a concept, and then it finally hits you and everything makes sense. That&amp;rsquo;s extremely satisfying.&lt;/p&gt;
&lt;p&gt;If you think about it, it&amp;rsquo;s a win-win-win.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Win 1&lt;/strong&gt;: you actually finish the chore. So the dishes are now clean, or the clothes are folded. Thanks to you.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Win 2&lt;/strong&gt;: you had epiphanies, made connections, formed ideas, cultivated opinions. You grew.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Win 3&lt;/strong&gt;: you &lt;em&gt;actually&lt;/em&gt; enjoyed doing something that&amp;rsquo;s very mundane. We seek satisfaction in what we do and what we did here is take something that most people don&amp;rsquo;t find any satisfaction doing, and turned it into a superpower.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So, yeah. Just because a task is boring, doesn&amp;rsquo;t mean that it&amp;rsquo;s not worth doing. You can get a lot out of it and make your day-to-day experiences enjoyable.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>It depends…</title>
      <link>/posts/it-depends/</link>
      <pubDate>Sat, 01 Oct 2022 17:11:00 -0700</pubDate>
      
      <guid>/posts/it-depends/</guid>
      <description>&lt;p&gt;Last year I went to physical therapy because I had severe lower back pain. It turned out the pain was mostly because of bad posture. As I was visiting the physical therapy place regularly, I started describing to the therapist how I sit on the couch, how I sit at a table and what my overall posture is during these times.&lt;/p&gt;
&lt;p&gt;I would ask questions like &amp;ldquo;I sit with my back straight at my desk, and for my legs I use a soft foot stool. Does that help with the posture&amp;rdquo;. And he&amp;rsquo;d say, &amp;ldquo;Well, it depends&amp;hellip;&amp;rdquo;
Then I would ask a question like, &amp;ldquo;I sometimes sit cross-legged on the sofa and I find that to be very comfortable. Would this affect my back in the long run?&amp;rdquo;. He&amp;rsquo;d again say, &amp;ldquo;Well, it depends&amp;hellip;&amp;rdquo;&lt;/p&gt;
&lt;p&gt;Pretty much all his answers started with &amp;ldquo;it depends&amp;hellip;&amp;rdquo; and then a caveat. At first I was annoyed that I never got direct answers and I hated any answer that started with &amp;ldquo;it depends&amp;hellip;&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;I later realized that I just wasn&amp;rsquo;t asking the right questions. Most of the time, the answers to many questions are not straight-forward, so it&amp;rsquo;s hard to get concrete answers. Take losing weight, for example. Asking questions like &amp;ldquo;Can I do X to lose weight?&amp;rdquo; will never get you a clear cut answer, because there are so many variables involved - like food, portions, exercise, sleep, stress, and many other factors. This is why there&amp;rsquo;s a plethora of information out there and people generally feel overwhelmed by it all. Our brains don&amp;rsquo;t deal very well with overwhelming amount of information. So, it tries to look for shortcuts and simple explanations. We also get into this habit of looking for specific information without understanding the overall picture. And many times, given the overall picture, the answer we get may not be the right one.&lt;/p&gt;
&lt;p&gt;Back to my story, I realized I wasn&amp;rsquo;t asking good questions and I was also taking similar mental shortcuts. What I should have asked was questions like, &amp;ldquo;what muscles get worked while sitting?&amp;rdquo;, &amp;ldquo;what&amp;rsquo;s the best way to strengthen those muscles?&amp;rdquo;, &amp;ldquo;how do muscles perform while being sedentary vs. while doing a physical activity?&amp;rdquo;. These and may be few other questions would have helped me get closer to the answer I was looking for.&lt;/p&gt;
&lt;p&gt;What I learned from this experience was to keep an eye out for answers that start with &amp;ldquo;It depends&amp;hellip;&amp;rdquo;. That&amp;rsquo;s a good signal that my question must be refined and that may be I should approach it in a different way.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>My beorg to blog workflow</title>
      <link>/posts/my-beorg-to-blog-workflow/</link>
      <pubDate>Mon, 05 Sep 2022 22:56:00 -0700</pubDate>
      
      <guid>/posts/my-beorg-to-blog-workflow/</guid>
      <description>&lt;p&gt;&lt;span class=&#34;underline&#34;&gt;Note&lt;/span&gt;: Most part of this blog post was written using the workflow described below.&lt;/p&gt;
&lt;p&gt;Alright. This needs some explaining and prerequisites.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m a heavy emacs user. I use it for a ton of things, one of them is to maintain and update my blog, which is a static site generated by &lt;a href=&#34;https://gohugo.io&#34;&gt;Hugo&lt;/a&gt;. There is already a great package called &lt;a href=&#34;https://ox-hugo.scripter.co&#34;&gt;ox-hugo&lt;/a&gt; which helps with blogging maintenance and workflows for Hugo-generated blogs.&lt;/p&gt;
&lt;p&gt;My emacs workflows involve adding tasks, writing down ideas, updating my journal, etc. &lt;a href=&#34;https://beorgapp.com&#34;&gt;Beorg&lt;/a&gt; is a great app for iPhone that syncs well with org files either via Dropbox (which is what I use for syncing) or by other means.&lt;/p&gt;
&lt;p&gt;Typically I don&amp;rsquo;t use Beorg on my phone for adding/updating blog posts. But when I do get ideas for a blog post, I use Beorg since that&amp;rsquo;s my main driver. Most of the time I just write down the outline of the blog post on my phone using Beorg, and add the rest like links, images, etc on my computer. But sometimes, I&amp;rsquo;ll be in the flow and end up writing an entire blog post on my phone.&lt;/p&gt;
&lt;p&gt;What I mention below may seem a little overwhelming for someone that doesn&amp;rsquo;t use emacs, so read with caution.&lt;/p&gt;
&lt;h2 id=&#34;the-workflow&#34;&gt;The workflow&lt;/h2&gt;
&lt;p&gt;So here&amp;rsquo;s my workflow.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;I get an idea for a blog post and I quickly capture it. There&amp;rsquo;s a capture template I&amp;rsquo;ve set up on beorg, that goes to a specific location with appropriate properties set.&lt;/li&gt;
&lt;li&gt;Once I capture the idea, I make whatever modifications are needed to polish it.&lt;/li&gt;
&lt;li&gt;Whenever I hop on to the computer, I go to the blog post I just created and run a function I wrote to generate the export filename for the post. As soon as I hit save, the post will be formatted to Hugo standards and will be exported to the right location.&lt;/li&gt;
&lt;li&gt;I run the Hugo server to quickly check if everything looks good.&lt;/li&gt;
&lt;li&gt;I run the &lt;code&gt;deploy.sh&lt;/code&gt; script to commit the code in the blog directory, commit the generated files in the GitHub pages directory and push both of them. That&amp;rsquo;s it.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;code-snippets-to-make-everything-work&#34;&gt;Code snippets to make everything work&lt;/h2&gt;
&lt;p&gt;Here are some of the code snippets that are used for different part of the workflow.&lt;/p&gt;
&lt;h3 id=&#34;beorg-capture&#34;&gt;Beorg capture&lt;/h3&gt;
&lt;p&gt;Below is the screenshot. The subtree can be configured in any way one sees fit.
&lt;a href=&#34;/images/beorg_blog_post_template.png&#34;&gt;&lt;img src=&#34;/images/beorg_blog_post_template.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;generating-hugo-post-filename&#34;&gt;Generating Hugo post filename&lt;/h3&gt;
&lt;p&gt;This is a code snippet that is required for generating the filename for the blog post. This function parses the post title and creates a filename that ends with a &amp;lsquo;.md&amp;rsquo; extension.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#93a1a1;background-color:#002b36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	(&lt;span style=&#34;color:#b58900&#34;&gt;defun&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;rr/extract-hugo-post-file-name&lt;/span&gt; ()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;Create a filename out of blog post&amp;#39;s title.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;This method is expected to be executed on a TODO heading on a an
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;org file containing blog posts that would be exported using
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;ox-hugo. Running this interactive command would set an org
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;property called EXPORT_FILE_NAME that is required by ox-hugo to
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;generate a Hugo-friendly markdown file in the location specified
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;in HUGO_BASE_DIR property.&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		(&lt;span style=&#34;color:#b58900&#34;&gt;interactive&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		(&lt;span style=&#34;color:#b58900&#34;&gt;setq-local&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;title-line&lt;/span&gt; (&lt;span style=&#34;color:#268bd2&#34;&gt;thing-at-point&lt;/span&gt; &lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#39;line&lt;/span&gt; &lt;span style=&#34;color:#cb4b16&#34;&gt;t&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		(&lt;span style=&#34;color:#b58900&#34;&gt;unless&lt;/span&gt; (&lt;span style=&#34;color:#268bd2&#34;&gt;not&lt;/span&gt; (&lt;span style=&#34;color:#268bd2&#34;&gt;string-match&lt;/span&gt; &lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;TODO &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;title-line&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			(&lt;span style=&#34;color:#b58900&#34;&gt;let*&lt;/span&gt; ((&lt;span style=&#34;color:#268bd2&#34;&gt;lines&lt;/span&gt; (&lt;span style=&#34;color:#268bd2&#34;&gt;split-string&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;title-line&lt;/span&gt; &lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;TODO &amp;#34;&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;						 (&lt;span style=&#34;color:#268bd2&#34;&gt;blog-post-title&lt;/span&gt; (&lt;span style=&#34;color:#268bd2&#34;&gt;nth&lt;/span&gt; &lt;span style=&#34;color:#2aa198&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;lines&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;						 (&lt;span style=&#34;color:#268bd2&#34;&gt;file-name&lt;/span&gt; (&lt;span style=&#34;color:#268bd2&#34;&gt;replace-regexp-in-string&lt;/span&gt; &lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;_+&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;-&amp;#34;&lt;/span&gt; (&lt;span style=&#34;color:#268bd2&#34;&gt;replace-regexp-in-string&lt;/span&gt; &lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;\\W&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;_&amp;#34;&lt;/span&gt; (&lt;span style=&#34;color:#268bd2&#34;&gt;string-trim&lt;/span&gt; (&lt;span style=&#34;color:#268bd2&#34;&gt;downcase&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;blog-post-title&lt;/span&gt;)))))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;						 (&lt;span style=&#34;color:#268bd2&#34;&gt;blog-post-file-name&lt;/span&gt; (&lt;span style=&#34;color:#268bd2&#34;&gt;concat&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;file-name&lt;/span&gt; &lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;.md&amp;#34;&lt;/span&gt;)))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				(&lt;span style=&#34;color:#268bd2&#34;&gt;org-set-property&lt;/span&gt; &lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;EXPORT_FILE_NAME&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;blog-post-file-name&lt;/span&gt;))))
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This is an interactive function and I run it by hitting &lt;code&gt;M-x&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;turn-on-auto-export-mode-when-i-visit-blog-dot-org&#34;&gt;Turn on auto-export-mode when I visit blog.org&lt;/h3&gt;
&lt;p&gt;All my blog posts are saved in an org file called blog.org. Whenever I open this file, &lt;code&gt;org-hugo-auto-export-mode&lt;/code&gt; is turned on.&lt;/p&gt;
&lt;p&gt;The minor mode &lt;code&gt;org-hugo-auto-export-mode&lt;/code&gt; enables auto export hugo posts on saving. However, this minor mode is disabled by default. It doesn&amp;rsquo;t make sense to have this turned on globally. So, the following piece of code enables the minor mode only when the buffer is &lt;code&gt;blog.org&lt;/code&gt;.
Found the code in a &lt;a href=&#34;https://stackoverflow.com/a/39652226&#34;&gt;stack overflow post&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#93a1a1;background-color:#002b36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#b58900&#34;&gt;defun&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;rr/enable-hugo-auto-export-mode&lt;/span&gt; ()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	(&lt;span style=&#34;color:#b58900&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#268bd2&#34;&gt;equal&lt;/span&gt; (&lt;span style=&#34;color:#268bd2&#34;&gt;buffer-name&lt;/span&gt;) &lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;blog.org&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			(&lt;span style=&#34;color:#268bd2&#34;&gt;org-hugo-auto-export-mode&lt;/span&gt;)))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#268bd2&#34;&gt;add-hook&lt;/span&gt; &lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#39;find-file-hook&lt;/span&gt; &lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#39;rr/enable-hugo-auto-export-mode&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;With this mode enabled, every time I hit save, any edited post gets exported to a Hugo-compatible markdown and saved to the right location specified in both the header of the file as well as the &lt;code&gt;EXPORT_FILE_NAME&lt;/code&gt; property.&lt;/p&gt;
&lt;h3 id=&#34;deploy-dot-sh-script&#34;&gt;deploy.sh script&lt;/h3&gt;
&lt;p&gt;Once the post is ready to be published, the blog post must be committed to the current repository and pushed. Since I&amp;rsquo;m also hosting the blog on GitHub using GitHub Pages, there&amp;rsquo;s an additional repository to which I have to copy the public directory generated in this code repository. Then those files must be committed and pushed as well. All of this is done using script called &lt;code&gt;deploy.sh&lt;/code&gt; that needs to be run once. Here&amp;rsquo;s the script.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#93a1a1;background-color:#002b36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;#!/bin/sh
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#586e75&#34;&gt;# If a command fails then the deploy stops&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b58900&#34;&gt;set&lt;/span&gt; -e
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b58900&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;\033[0;32mDeploying updates to GitHub...\033[0m\n&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#586e75&#34;&gt;# Build the project.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hugo -t ezhil &lt;span style=&#34;color:#586e75&#34;&gt;# if using a theme, replace with `hugo -t &amp;lt;YOURTHEME&amp;gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#586e75&#34;&gt;# git push committed changes in existing folder&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git push origin master
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#586e75&#34;&gt;# Copy public folder to the repo outside the submodule&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#586e75&#34;&gt;# The issue is, submodule does not get updated when running this script either because of incorrect setup&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#586e75&#34;&gt;# or maybe because public is part of gitignore and the remote points to blog.git instead of rrajath.github.io.git.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#586e75&#34;&gt;# In order to make this script work properly, the public folder that is generated is copied to the repo outside&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#586e75&#34;&gt;# this folder and then committed and pushed&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cp -r public/* ../rrajath.github.io
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#586e75&#34;&gt;# Go To Public folder&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b58900&#34;&gt;cd&lt;/span&gt; ../rrajath.github.io
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#586e75&#34;&gt;# Add changes to git.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git add -A
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#586e75&#34;&gt;# Commit changes.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;msg&lt;/span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;rebuilding site &lt;/span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;$(&lt;/span&gt;date&lt;span style=&#34;color:#719e07&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#719e07&#34;&gt;[&lt;/span&gt; -n &lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;$*&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#719e07&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#719e07&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#268bd2&#34;&gt;msg&lt;/span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;$*&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#719e07&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git commit -m &lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;$msg&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#586e75&#34;&gt;# Push source and build repos.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git push origin master
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;This seems like a lot of work, but it&amp;rsquo;s not. All of this works beautifully and it&amp;rsquo;s a one-time setup. The satisfaction of coming up with a system that is tailored to work exactly to my needs feels great.&lt;/p&gt;
&lt;p&gt;Also, workflows are hard to explain using text or in a blog post. There are quite a lot of moving parts and different parts of the workflow need different pre-requisites. When all of them are aligned, it works smoothly.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Now Archive</title>
      <link>/now-archive/</link>
      <pubDate>Mon, 05 Sep 2022 21:51:51 -0700</pubDate>
      
      <guid>/now-archive/</guid>
      <description>&lt;p&gt;This page contains everything that was moved from the &lt;a href=&#34;https://rrajath.com/now/&#34;&gt;Now page&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;sep-5-2022&#34;&gt;Sep 5, 2022&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.amazon.com/Flow-Psychology-Experience-Perennial-Classics/dp/0061339202&#34;&gt;Flow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;jul-31-2022&#34;&gt;Jul 31, 2022&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.amazon.com/dp/B09LVVN9L3/ref=cm_sw_r_cp_api_ADKEAC3M8TS8DNTXXCEN&#34;&gt;Building a Second Brain&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;jun-26-2022&#34;&gt;Jun 26, 2022&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.amazon.com/The-Three-Body-Problem-audiobook/dp/B00P00QPPY&#34;&gt;The Three-Body Problem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.amazon.com/Masters-Doom-Created-Transformed-Culture-ebook/dp/B000FBFNL0&#34;&gt;Masters of Doom&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.amazon.com/Good-They-Cant-Ignore-You-ebook/dp/B0076DDBJ6&#34;&gt;So Good They Can&amp;rsquo;t Ignore You&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.amazon.com/12-Week-Year-Others-Months/dp/1118509234&#34;&gt;The 12 Week Year&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;jan-23-2022&#34;&gt;Jan 23, 2022&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.goodreads.com/book/show/4948826-sum?ac=1&amp;amp;from_search=true&amp;amp;qid=4nUZPNXCOw&amp;amp;rank=1&#34;&gt;Sum: Forty Tales from the Afterlives&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;may-30-2021&#34;&gt;May 30, 2021&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Finished reading The Great Mental Models Vol. 1&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;jan-9-2021&#34;&gt;Jan 9, 2021&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Adding more blog posts&lt;/li&gt;
&lt;li&gt;Configured some YASnippets on my Emacs&lt;/li&gt;
&lt;li&gt;Added a bunch of dotfiles as literate configs&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;oct-18-2020&#34;&gt;Oct 18, 2020&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Setting up a sustainable sync for my org files on my phone and laptop
(since Orgzly is a bit of a pain when it comes to this)&lt;/li&gt;
&lt;li&gt;Learning Emacs and org-mode. Loving it&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;aug-29-2020&#34;&gt;Aug 29, 2020&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://acesounderglass.com/2020/06/10/what-to-write-down-when-youre-reading-to-learn/&#34;&gt;What to write down when you&amp;rsquo;re reading to learn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;jul-25-2020&#34;&gt;Jul 25, 2020&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://maggieappleton.com/basb/&#34;&gt;Building a second brain&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Self-hosting my data using Nextcloud on my Raspberry Pi&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;jun-24-2020&#34;&gt;Jun 24, 2020&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Moved my blog from Jekyll to Hugo and now customizing some templates&lt;/li&gt;
&lt;li&gt;Indieweb integration&lt;/li&gt;
&lt;li&gt;Self-hosting my data using Nextcloud on my Raspberry Pi&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Now</title>
      <link>/now/</link>
      <pubDate>Mon, 05 Sep 2022 21:51:34 -0700</pubDate>
      
      <guid>/now/</guid>
      <description>&lt;h2 id=&#34;reading&#34;&gt;Reading&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.amazon.com/Code-Language-Computer-Developer-Practices-ebook/dp/B00JDMPOK2&#34;&gt;Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.amazon.com/dp/B08XTNHRR5&#34;&gt;Immune&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.amazon.com/dp/B098PGCSXT/ref=cm_sw_r_cp_api_5GVD160NQV7KHC41TVXT&#34;&gt;Self-Sovereign Identity&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;watching&#34;&gt;Watching&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=54l8_ewcOlY&amp;amp;list=PLND1JCRq8Vuh3f0P5qjrSdb5eC1ZfZwWJ&#34;&gt;Awakening from the Meaning Crisis&lt;/a&gt; (16 episodes in)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;projects&#34;&gt;Projects&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Building split ergo mech keyboards (built a corne choc, a microdox bud mx and a 3x5 cantor so far)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;health&#34;&gt;Health&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Working out&lt;/li&gt;
&lt;li&gt;Running&lt;/li&gt;
&lt;li&gt;Meditating&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;learning&#34;&gt;Learning&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;NextJs&lt;/li&gt;
&lt;li&gt;Building keyboards, soldering, debugging&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;this-is-a-now-page-based-on-the-concept-by-derek-sivers-dot-visit-nownownow-dot-com-for-more-inspiration-dot-visit-the-now-archive-to-check-out-things-that-used-to-be-on-this-page&#34;&gt;This is a Now page, based on the &lt;a href=&#34;https://sivers.org/nowff&#34;&gt;concept by Derek Sivers&lt;/a&gt;. Visit &lt;a href=&#34;https://nownownow.com&#34;&gt;nownownow.com&lt;/a&gt; for more inspiration. Visit the &lt;a href=&#34;/now-archive&#34;&gt;Now Archive&lt;/a&gt; to check out things that used to be on this page&lt;/h4&gt;
</description>
    </item>
    
    <item>
      <title>Write emails from bottom to top</title>
      <link>/posts/write-emails-from-bottom-to-top/</link>
      <pubDate>Sun, 14 Aug 2022 19:06:00 -0700</pubDate>
      
      <guid>/posts/write-emails-from-bottom-to-top/</guid>
      <description>&lt;p&gt;In the years I&amp;rsquo;ve composed emails, I was initially finding it a little hard to go through the top-down steps of adding people in the To field, CC field and coming up with the subject line. There were two problems with this workflow:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;It broke my flow for composing an email&lt;/strong&gt;
I&amp;rsquo;d have a vague idea of how to express my thoughts into words and that flow was broken by filling out these fields.
&lt;strong&gt;I used to be trigger happy in sending the email&lt;/strong&gt;.
In most email clients, &lt;code&gt;Option+Enter&lt;/code&gt; (or &lt;code&gt;Alt+Enter&lt;/code&gt;) is the keyboard shortcut for sending email. I&amp;rsquo;d be so used to hitting these that I&amp;rsquo;d sometimes hit them in the middle of the email. This was particularly a problem when I was using IntelliJ IDEs quite heavily. Because, &lt;code&gt;Option+Enter&lt;/code&gt; in an IntelliJ IDE would insert the currently suggested hint.&lt;/p&gt;
&lt;p&gt;So, I figured out a simple fix for this: Write emails from bottom to top. Basically, do the following in order:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Write the body of the email first and you get all your thoughts out.&lt;/li&gt;
&lt;li&gt;Then fill the subject line which is now easier to summarize.&lt;/li&gt;
&lt;li&gt;Add people in To and CC fields.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The best part about this workflow is, hitting &lt;code&gt;Option+Enter&lt;/code&gt; at any point during the process (except once you start filling the To/CC fields) would do nothing, because there&amp;rsquo;s nobody to send the email to. This turned out to be super useful hack that I have been using ever since and has worked out really well.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Don&#39;t break the chain - hard mode</title>
      <link>/posts/dont-break-the-chain-hard-mode/</link>
      <pubDate>Mon, 24 Jan 2022 22:45:00 -0800</pubDate>
      
      <guid>/posts/dont-break-the-chain-hard-mode/</guid>
      <description>&lt;p&gt;The basic concept of &lt;a href=&#34;http://dontbreakthechain.com&#34;&gt;Don&amp;rsquo;t Break The Chain&lt;/a&gt; is to do an activity every day so as to &amp;ldquo;not break the chain&amp;rdquo;. This is a method that enforces consistency. This is helpful to make habits stick, provide visual feedback on the progress on a daily basis and motivates us to keep going.&lt;/p&gt;
&lt;p&gt;I came up with a slight modification to this method which I call &amp;ldquo;Don&amp;rsquo;t Break the Chain - hard mode&amp;rdquo;. This is how it works:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;You start with one habit that you want to do every day and you start marking your calendar. For example, read a few pages in a book every day&lt;/li&gt;
&lt;li&gt;You do this for a few days and keep marking the calendar. The chain starts getting longer and longer.&lt;/li&gt;
&lt;li&gt;Now you want to add another habit like &amp;ldquo;Meditate for 10 minutes every day&amp;rdquo;. Instead of creating a new chain, you just continue the existing chain.&lt;/li&gt;
&lt;li&gt;Keep adding habits like these along the way while maintaining just one chain. If you miss &lt;strong&gt;any&lt;/strong&gt; of the habits, the whole chain resets and you have to start over.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The nice thing about this is, for newer habits you get a &amp;ldquo;headstart&amp;rdquo; with a chain that&amp;rsquo;s long enough already. But the flipside is, it&amp;rsquo;s much harder to skip any of the habits you&amp;rsquo;re tracking because it resets everything. So, it kind of is anxiety-inducing.&lt;/p&gt;
&lt;p&gt;I tried this once and I stacked about 4 habits over the course of 5-6 months and it worked surprisingly well. I want to try it again sometime soon.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Replacing knee-jerk reactions with new learnings</title>
      <link>/posts/replacing-knee-jerk-reactions-with-new-learnings/</link>
      <pubDate>Sun, 23 Jan 2022 21:58:00 -0800</pubDate>
      
      <guid>/posts/replacing-knee-jerk-reactions-with-new-learnings/</guid>
      <description>&lt;p&gt;Often times we come across a blog post, a portion of a book, a podcast, an interview, etc where an expert in a field is explaining something that is very counter-intuitive to us. This happens mostly because we have some strongly held beliefs about how the world works and those beliefs are challenged. This used to happen to me while I was growing up and my first reaction to this was usually, &amp;ldquo;That doesn&amp;rsquo;t make sense. He&amp;rsquo;s clearly wrong, because of &amp;lt;insert vaguely recollected poorly understood never researched supposed fact/anecdote here&amp;gt;&amp;rdquo;. It didn&amp;rsquo;t help me in any way. Some times it made me feel better about myself, but the net outcome of consuming that resource was zero at best, if not negative.&lt;/p&gt;
&lt;p&gt;As I grew up, I started realizing and asking myself - &amp;ldquo;am I really challenging someone who has a PhD in this subject they&amp;rsquo;re discussing and has spent countless hours thinking about the topic where I&amp;rsquo;m going in to this with nothing more than a hunch on a subject I know nothing about?&amp;rdquo; It&amp;rsquo;s definitely possible that I&amp;rsquo;m right and they&amp;rsquo;re wrong, but it&amp;rsquo;s also highly unlikely.&lt;/p&gt;
&lt;p&gt;Once I realized this I stopped having such knee-jerk reactions when I saw something I didn&amp;rsquo;t agree with initially. My first reaction now is always, &amp;ldquo;That&amp;rsquo;s interesting and doesn&amp;rsquo;t conform with my beliefs. What am I missing?&amp;rdquo; I prefer to err on the side of me being wrong and learning something from it and updating my beliefs rather than doubling down on something I was already believing in without confirming the validity of it.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s easy to dismiss something just because it doesn&amp;rsquo;t align with what we believe in, but it&amp;rsquo;s much more fruitful to learn about a different perspective and update our beliefs.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>2021 - Year in Review</title>
      <link>/posts/2021-year-in-review/</link>
      <pubDate>Sun, 16 Jan 2022 11:32:00 -0800</pubDate>
      
      <guid>/posts/2021-year-in-review/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve been doing this &amp;ldquo;Year in Review&amp;rdquo; for some time now and it helps me put things in perspective as to what I spent more time on, what I enjoyed, where I fell behind, etc. It&amp;rsquo;s a great exercise to do regularly and check in with yourself. So, here are the usual sections - what went well, what didn&amp;rsquo;t go well, side quests and lessons learned.&lt;/p&gt;
&lt;h2 id=&#34;what-went-well&#34;&gt;What went well&lt;/h2&gt;
&lt;h3 id=&#34;deleted-whatsapp&#34;&gt;Deleted WhatsApp&lt;/h3&gt;
&lt;p&gt;This was another step in my journey of &amp;ldquo;caring more about privacy&amp;rdquo; and I also &lt;a href=&#34;./posts/whatsapp-privacy-policy-signal&#34;&gt;wrote a blog post about it&lt;/a&gt;. When WhatsApp introduced new terms and conditions to collect even more data than it already did, it motivated people to quit WhatsApp and move to Signal. I did too. I&amp;rsquo;m glad to not be part of all the groups with constant pings and I&amp;rsquo;m even more happy to be part of and in support of a product that actually cares about privacy.&lt;/p&gt;
&lt;h3 id=&#34;home-automation&#34;&gt;Home Automation&lt;/h3&gt;
&lt;p&gt;I bought a home in early 2021 and I wanted to change everything to my liking. The rented apartments I lived in wouldn&amp;rsquo;t let me change the switches or outlets (obviously) and owning a place gave me the freedom to turn my home into a smarthome. I used HomeAssistant as the hub with a USB stick that supports both ZWave and ZigBee protocols. I changed all the switches to smart switches that operate on ZWave, added a bunch of door sensors, motion sensors, time based automations, etc. Really enjoyed configuring and automating everything I could and I&amp;rsquo;m happy with the results.&lt;/p&gt;
&lt;h3 id=&#34;journaling&#34;&gt;Journaling&lt;/h3&gt;
&lt;p&gt;I took journaling more seriously in 2021. My initial approach to journaling was about building consistency. And to achieve consistency, I came up with process, structure and templates so that I could make it more &amp;ldquo;streamlined&amp;rdquo;. This led to journaling become a chore instead of an activity that needs to be performed mindfully. So, my journaling habit became more intentional and I was only doing it whenever I really wanted to write something down. This removed the stress of adding an entry every day. What I did force myself to do was to write weekly and monthly reviews which gave me good checkpoints on what went well, what didn&amp;rsquo;t go well and such.&lt;/p&gt;
&lt;h3 id=&#34;built-my-own-emacs-config-from-scratch&#34;&gt;Built my own emacs config from scratch&lt;/h3&gt;
&lt;p&gt;I&amp;rsquo;ve been using Emacs for about 1.5 years now and for the first year I used Doom Emacs which gave me pretty much everything I wanted. I hardly added anything extra in my config. But after watching SystemCrafters videos, I decided to roll my own and that was an amazing experience. I learned so much about Emacs in 3 weeks than I did in more than a year. Though laziness is what prevented me initially to create my own config, I&amp;rsquo;m glad I did it. I now know exactly what my emacs does and where to look and what to tweak. Since I made this a literate configuration, the whole config is documented and I&amp;rsquo;ve uploaded it on GitHub. This also made me create literate config for other applications like zsh, vim, etc.&lt;/p&gt;
&lt;h2 id=&#34;what-didn-t-go-well&#34;&gt;What didn&amp;rsquo;t go well&lt;/h2&gt;
&lt;h3 id=&#34;health&#34;&gt;Health&lt;/h3&gt;
&lt;p&gt;This includes both diet and fitness. I had pretty bad lower back issues, and I had to stop working out and get some physical therapy. That took a few months after which I started doing yoga which helped me immensely. I knew good posture and exercise were important, but I never realized how important they were until I had these issues.&lt;/p&gt;
&lt;h3 id=&#34;making-notes&#34;&gt;Making Notes&lt;/h3&gt;
&lt;p&gt;I used to make notes a lot when I consumed information via blog posts, podcasts, books or YouTube. I&amp;rsquo;ve been fiddling with Obsidian for a while now, but never got the time to create a workflow to take notes in an effective way. There were technological constraints like the app not being available on the phone initially and then not being easy enough to sync the notes, etc. This is something I want to think more about.&lt;/p&gt;
&lt;h2 id=&#34;side-quests&#34;&gt;Side Quests&lt;/h2&gt;
&lt;h3 id=&#34;picked-up-guitar--again&#34;&gt;Picked up guitar (again)&lt;/h3&gt;
&lt;p&gt;I&amp;rsquo;ve been playing guitar on and off for many years and I&amp;rsquo;ve only played acoustic guitar. I wanted to try an electric guitar and I finally got one. I&amp;rsquo;m really enjoying it, especially with the Spark Amp which I highly recommend.&lt;/p&gt;
&lt;h3 id=&#34;cryptocurrency&#34;&gt;Cryptocurrency&lt;/h3&gt;
&lt;p&gt;I was not so much into cryptocurrencies and blockchain, but lately I got interested in them and started exploring the technological side of it. I&amp;rsquo;ve been consuming lot of videos and podcasts about cryptocurrencies and NFTs. It&amp;rsquo;s been an interesting journey to say the least. I&amp;rsquo;ve been carving out time here and there to learn about it whenever I can.&lt;/p&gt;
&lt;h3 id=&#34;awakening-from-the-meaning-crisis&#34;&gt;Awakening from the Meaning Crisis&lt;/h3&gt;
&lt;p&gt;This is one of those serendipitous finds where one day I was checking the &lt;a href=&#34;https://reddit.com/r/InsightfulQuestions&#34;&gt;/r/InsightfulQuestions&lt;/a&gt; subreddit where one of the comments for a question (I don&amp;rsquo;t even remember the question) was a mention of a lecture series on YouTube called &lt;a href=&#34;https://www.youtube.com/watch?v=54l8_ewcOlY&amp;amp;list=PLND1JCRq8Vuh3f0P5qjrSdb5eC1ZfZwWJ&#34;&gt;Awakening from the Meaning Crisis&lt;/a&gt;. I&amp;rsquo;ve always been really interested in philosophy, anthropology, deep thoughts and thought experiments. So, just watching one episode of this got me hooked. Each episode is dense with information and it also makes you think a lot. I&amp;rsquo;ve been deeply enjoying this series and already made lot of notes and will continue to do so. I&amp;rsquo;ve also been taking it very slow and not binging on it because I want to give myself time to think and reflect on what I&amp;rsquo;ve consumed.&lt;/p&gt;
&lt;h2 id=&#34;lessons-learned&#34;&gt;Lessons Learned&lt;/h2&gt;
&lt;h3 id=&#34;never-neglect-health&#34;&gt;Never neglect health&lt;/h3&gt;
&lt;p&gt;Naval Ravikant said &amp;ldquo;Easy choices, hard life. Hard choices, easy life&amp;rdquo;, and it could not be more true. What I thought was maybe a couple of weeks of chilling - being lazy, ordering in, lying on the couch and watching YouTube ended up becoming a lifestyle. Easy choices made me put on weight, be out of shape and be slow and sluggish. Hard choices are to correct these and get back in shape. And this involves cooking at home most of the time, thinking about macros and being more conscious about what I consume, motivating myself to workout and be active. Getting back in shape is not linear. It&amp;rsquo;s harder and takes longer to get back in shape.&lt;/p&gt;
&lt;h3 id=&#34;having-few-interests-is-better-than-having-many&#34;&gt;Having few interests is better than having many&lt;/h3&gt;
&lt;p&gt;I&amp;rsquo;m someone that&amp;rsquo;s very curious about things and I easily get hooked on to learning new things. This isn&amp;rsquo;t sustainable since my interests about stuff keep piling on and it either gets overwhelming or frustrating because I&amp;rsquo;m unable to give my attention to all of them. So, instead of having such varied interests, it&amp;rsquo;s better to have just 2-3 things that you can go deep on and spend more time, and drop the rest. These handful of interests would be more fulfilling than trying to hit too many targets.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using literate configuration for all text-based configs</title>
      <link>/posts/using-literate-configuration-for-all-text-based-configs/</link>
      <pubDate>Fri, 17 Sep 2021 21:22:00 -0700</pubDate>
      
      <guid>/posts/using-literate-configuration-for-all-text-based-configs/</guid>
      <description>&lt;p&gt;Has it ever happened to you that you look at your config (vim, tmux, whatever) after a while and see an obscure piece of code there that you have no recollection adding and what it&amp;rsquo;s even doing? This has happened to me so many times. So, what can we do about it? Add comments while adding new pieces of config? Couple of lines of comments are fine, but if you need more explanation than that, it just gets cluttered. If you want to add links, they are not clickable, unless you have an editor or terminal that can handle text links and make them clickable.&lt;/p&gt;
&lt;p&gt;So what can we do? What we &lt;em&gt;can&lt;/em&gt; do is change that config to a literate configuration.&lt;/p&gt;
&lt;h2 id=&#34;what-is-literate-configuration&#34;&gt;What is Literate Configuration&lt;/h2&gt;
&lt;p&gt;Literate Configuration comes from the &lt;a href=&#34;https://en.wikipedia.org/wiki/Literate%5Fprogramming&#34;&gt;literate programming paradigm&lt;/a&gt;. Simple put, you write your config like documentation where you&amp;rsquo;d have code blocks interspersed within your config. You run a simple command to &amp;ldquo;tangle&amp;rdquo; these documentation-like files and the code blocks in them get evaluated and then written to a separate file (like an actual config file). And, tangling is a process of extracting source blocks in an org file into the location specified at the top of the org file or in the source block itself.&lt;/p&gt;
&lt;p&gt;Once you follow this, you will never touch the actual config. You basically write documentation for each part of your config and let it generate your config file with your code in it. Your application understands the file your literate config generates and you understand the file you write since it&amp;rsquo;s well-documented.&lt;/p&gt;
&lt;h2 id=&#34;so-why-literate-configuration-anyway&#34;&gt;So, why literate configuration anyway?&lt;/h2&gt;
&lt;p&gt;Changing your configs to make them look like documentation sounds like a lot of work. But, there are many benefits to using a literate configuration:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Easy to understand&lt;/strong&gt;. Thanks to the documentation surrounding the code snippets&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Easy to share&lt;/strong&gt;. People you share this with need no explanation as to what&amp;rsquo;s in your config, your documentation takes care of that&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Easy to maintain&lt;/strong&gt;. You never touch the actual config, you only update this .org file and make it generate the actual source file&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Easy to publish&lt;/strong&gt;. If you want to publish your config online, it&amp;rsquo;s super easy. GitHub, for example, natively supports org the same way it supports Markdown. So, these org files are rendered nicely, just as regular documentation.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;One of the issues I used to have with maintaining multiple dotfiles for my applications is that they&amp;rsquo;re all in different places. If I have to check them all into a git repo, I&amp;rsquo;d either have all of them in one location and create symlinks to them in the apps that use them, or use a program like &lt;a href=&#34;https://www.gnu.org/software/stow&#34;&gt;GNU Stow&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I didn&amp;rsquo;t like either of these methods. Literate configuration solves this in the most elegant way. All you have to do is have your literate configs (org files) in a git repo (used for dotfiles) and set the tangle locations in each of these files to where each of the apps needs them. Once that is done, your dotfiles will only contain org files and all your apps will contain the config files they need.&lt;/p&gt;
&lt;h2 id=&#34;how-to-build-a-literate-config&#34;&gt;How to build a literate config?&lt;/h2&gt;
&lt;p&gt;Building a literate configuration needs just one prerequisite - Emacs, because we need a way to &amp;ldquo;tangle&amp;rdquo; the source blocks in the org files. Since Emacs ships with org mode and org babel, tangling is just a keybinding away. We only need two things in order to create a literate configuration: a source block and a tangle attribute. Here&amp;rsquo;s an example to show how that&amp;rsquo;s done.&lt;/p&gt;
&lt;h3 id=&#34;example&#34;&gt;Example&lt;/h3&gt;
&lt;p&gt;Enabling tangle in an org file can be done by specifying a tangle location at the top as part of the &lt;code&gt;#+PROPERTY&lt;/code&gt; attribute, like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#93a1a1;background-color:#002b36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;#+PROPERTY: header-args :tangle /path/to/file-name.extension
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Here&amp;rsquo;s what a code block looks like in an org file.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#93a1a1;background-color:#002b36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;#+begin_src emacs-lisp
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (setq foo &amp;#34;bar&amp;#34;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;#+end_src
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can write your documentation around these code blocks and hitting &lt;code&gt;C-c C-v t&lt;/code&gt; (or invoking the function &lt;code&gt;org-babel-tangle&lt;/code&gt;) at the top of your file would tangle them to the file specified in the &lt;code&gt;#+PROPERTY&lt;/code&gt; attribute of your org file.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Using literate configuration for config files is great and I converted almost all my configs to literate configs. For reference, have a look at my &lt;a href=&#34;https://github.com/rrajath/dotfiles/blob/master/.emacs.d/PrivateConfig.org&#34;&gt;literate configuration for my Emacs setup&lt;/a&gt;. Look at the source blocks to see actual configs. Use the &amp;ldquo;Raw&amp;rdquo; button on github notice line 2 where it says &lt;code&gt;:tangle ./private-config.el&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>My experience with Emacs so far</title>
      <link>/posts/my-experience-with-emacs-so-far/</link>
      <pubDate>Sat, 11 Sep 2021 21:48:00 -0700</pubDate>
      
      <guid>/posts/my-experience-with-emacs-so-far/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve been a vim user for about 15 years and loved every aspect of it. I&amp;rsquo;m nowhere close to the vim wizards I&amp;rsquo;ve seen on YouTube nor some of my coworkers who spend most part of their day writing shell scripts in vim. But among my friends and my team, I was considered a power-user. I used a lot of plugins to get things done much easily, I had my shortcuts that my friends found fascinated by and some of them were kind of amazed that I would do a code walkthrough jumping from function to function and file to file using just vim where most of them were going to their IDEs to do that.&lt;/p&gt;
&lt;p&gt;But that&amp;rsquo;s about it. My vim usage was just for making quick edits to code (larger edits meant opening up an IDE), editing shell scripts and viewing files quickly. I had to use a different tool for managing my tasks, journaling, saving links, etc.&lt;/p&gt;
&lt;h2 id=&#34;using-notion&#34;&gt;Using Notion&lt;/h2&gt;
&lt;p&gt;I came across &lt;a href=&#34;https://notion.so&#34;&gt;Notion&lt;/a&gt; and I fell in love with how great it looked and how customizable it was. A lot of them were drag and drop, all the saved links had thumbnails, I could write comments, it was great for task management - I could set up dates and deadlines and get notifications accordingly, templates were great (I came up with my own journaling template since I used bullet journaling), tables were awesome and I could create different views. I used it for couple of years and I thoroughly enjoyed it.&lt;/p&gt;
&lt;h3 id=&#34;downsides-of-notion&#34;&gt;Downsides of Notion&lt;/h3&gt;
&lt;p&gt;There were couple of downsides with my Notion setup.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;There was no offline support (at least at that time when I was using it). My notes were stored somewhere else and I needed internet to access it every time. This means, I couldn&amp;rsquo;t use it at work.&lt;/li&gt;
&lt;li&gt;My notes were in a format that I couldn&amp;rsquo;t control. If I didn&amp;rsquo;t like Notion some time in the future, I couldn&amp;rsquo;t just export it to a different note taking app. I should either wait for the other app to add support to import Notion docs into it or export each and every note I had to markdown and then find a way to deal with it.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;There were other downsides to Notion depending on the usage, but these were the ones I was affected by the most. I wanted a note taking system that would stand the test of time, something that was preferably open source, one where I had control of my notes, offline supported, customizable.&lt;/p&gt;
&lt;p&gt;As I was searching for alternatives, I saw several HackerNews posts about note-taking, I kept seeing emacs (and specifically org-mode) pop up everywhere and every single person had only postive things to say about it.&lt;/p&gt;
&lt;h2 id=&#34;my-first-introduction-to-emacs--spacemacs&#34;&gt;My first introduction to Emacs (spacemacs)&lt;/h2&gt;
&lt;p&gt;A couple of years ago I was talking to a coworker of mine about vim and he said he uses emacs. Until then, nobody I met talked about emacs. With all the HN posts I read before, I was curious to try it and asked him where do I start. He said, use &lt;a href=&#34;https://www.spacemacs.org&#34;&gt;spacemacs&lt;/a&gt;. So, I did.&lt;/p&gt;
&lt;p&gt;I liked some parts of spacemacs, especially &lt;a href=&#34;https://orgmode.org&#34;&gt;org-mode&lt;/a&gt;. I got pretty excited and I started using it as my daily driver, but after using it for a couple of weeks I gave up. I found spacemacs to be very clunky and slow. I didn&amp;rsquo;t like the UI very much, and frankly, I didn&amp;rsquo;t know how customizable emacs was at the time. Spacemacs had something called layers that I could enable. Elisp was so foreign to me that I didn&amp;rsquo;t bother customizing anything because I had to learn a new language just to customize what I use and the amount of parenthesis threw me off.&lt;/p&gt;
&lt;h2 id=&#34;doom-emacs&#34;&gt;Doom Emacs&lt;/h2&gt;
&lt;p&gt;About a year ago, I heard about &lt;a href=&#34;https://github.com/hlissner/doom-emacs&#34;&gt;Doom Emacs&lt;/a&gt;, I think in one of the emacs subreddits. I was intrigued again and I installed it. This time I was immediately hooked. The UI was better, the application was faster, configuration was easier, what I got out of the box with Doom Emacs was perfect for me. Everything felt intuitive and I started using it more and more. I developed my own workflows to organize my tasks, take meeting notes and journal.&lt;/p&gt;
&lt;p&gt;I liked the fact that I was able to easily toggle things on and off in the config, and I didn&amp;rsquo;t really need to know Elisp to make any changes mainly because I got everything I needed out of the box anyway. I was using Android at the time and &lt;a href=&#34;http://www.orgzly.com&#34;&gt;Orgzly&lt;/a&gt; was a good app for managing orgmode files as well.&lt;/p&gt;
&lt;p&gt;I was happy with the setup I had and like I mentioned before, I used it mainly for taking notes, organizing my tasks and journaling. Very minimal configuration and package setup. I honestly didn&amp;rsquo;t really understand how everything fit together, how packages worked, how things can be customized by setting variables, or anything. But it worked for me, for the most part and I went with it.&lt;/p&gt;
&lt;h2 id=&#34;my-custom-configuration&#34;&gt;My Custom Configuration&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;ve been following &lt;a href=&#34;https://www.youtube.com/channel/UCAiiOTio8Yu69c3XnR7nQBQ&#34;&gt;System Crafters youtube channel&lt;/a&gt; for a few months and I wanted to check out the &lt;a href=&#34;https://www.youtube.com/watch?v=74zOY-vgkyw&amp;amp;list=PLEoMzSkcN8oPH1au7H6B7bBJ4ZO7BXjSZ&#34;&gt;Emacs from Scratch series&lt;/a&gt;. For the longest time, I used to think building an emacs config from scratch is a complete waste of time when we already have something like Doom Emacs which gives us most of the things we need.&lt;/p&gt;
&lt;p&gt;But I was wrong. About 3 weeks ago, I decided to give it a shot, followed the series and started building my own config. The amount of learning I had in the last 3 weeks is far greater than what I&amp;rsquo;ve learned ever since I started using Emacs. I learned so much about Emacs that I have a deep appreciation for it now. In 3 weeks I came up with a config that is a 1000+ lines long. Every day I tweak my config and make something better. I keep looking forward to using Emacs all the time.&lt;/p&gt;
&lt;p&gt;The fact that I could literally look at what a specific keybinding does, which function gets invoked when I hit the keybinding, what the implemntation of that function is and basically change it to do what I want was so mind-boggling to me. I felt a sense of freedom where I could change Emacs to literally do whatever I want and behave exactly the way I want it. No other editor even comes close to this level of customizability and that&amp;rsquo;s what excited me.&lt;/p&gt;
&lt;p&gt;Every customization I was doing involved Elisp in some capacity that each such change was a new learning opportunity for me. So, with each change, my Emacs got better &lt;em&gt;and&lt;/em&gt; I learned Elisp, which is like a win-win. As soon as I started this journey, so many doors opened up for me and I found opportunities to use Emacs for something more than just journaling and taking notes.&lt;/p&gt;
&lt;p&gt;I now use it as a file manager, terminal, taking notes, organizing my life, journaling, git client, a fully functional IDE with code completions and such, manage my work calendar, quick file edits, viewing and querying json files and blogging. This very post was written in Emacs and published using &lt;a href=&#34;https://ox-hugo.scripter.co&#34;&gt;ox-hugo&lt;/a&gt; - a package used for exporting org files to markdown files that Hugo understands.&lt;/p&gt;
&lt;h2 id=&#34;obligatory-xkcd-comic-about-emacs&#34;&gt;Obligatory XKCD comic about emacs&lt;/h2&gt;
&lt;p&gt;Now that I&amp;rsquo;ve said all this about emacs, I &lt;em&gt;have&lt;/em&gt; to use the obligatory xkcd comic about emacs:&lt;/p&gt;
&lt;figure&gt;&lt;a href=&#34;/images/xkcd_emacs.png&#34;&gt;&lt;img src=&#34;/images/xkcd_emacs.png&#34;/&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;If you have never tried Emacs before, I highly recommend you try it. It has a steep learning curve, but it&amp;rsquo;s totally worth it. The more you learn about it, the more appreciation you&amp;rsquo;d have. If you&amp;rsquo;re an absolute beginner, Doom Emacs is a great place to start. However, once you have familiarized yourself with Emacs via Doom Emacs, I encourage you to build your own config. This would ensure you&amp;rsquo;ll know exactly what&amp;rsquo;s going on in your config and it&amp;rsquo;s compeltely in your control. Your emacs will be truly personalized to your liking.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
